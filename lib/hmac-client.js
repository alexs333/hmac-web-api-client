// Generated by CoffeeScript 1.7.1
(function() {
  var auth, calculateSignature, canonicalRepresentation, date, errorHandler, successHandler;

  date = null;

  auth = null;

  calculateSignature = function(jqXHR, secret, settings) {
    var rep;
    rep = canonicalRepresentation(jqXHR, settings);
    return CryptoJS.HmacSHA256(rep, secret);
  };

  canonicalRepresentation = function(jqXHR, settings) {
    var a, _ref;
    a = document.createElement("a");
    a.href = settings.url;
    return "GET\ndate:" + settings.headers["X-HMAC-DATE"] + "\nnonce:" + ((_ref = settings.headers["X-HMAC-NONCE"]) != null ? _ref : '') + "\n" + a.pathname;
  };

  successHandler = function(data, textStatus, jqXHR) {
    var prettyData, responseBlock;
    $('.main .status .status-text').text(textStatus + " - " + jqXHR.status).removeClass('bg-danger').addClass('bg-success');
    responseBlock = $('.main .result code');
    prettyData = JSON.stringify(data, null, 2);
    console.log(prettyData);
    responseBlock.text(prettyData);
    hljs.highlightBlock(responseBlock.get(0));
    return $('.headers tbody').empty().append("<tr><td>X-HMAC-DATE</td><td>" + date + "</td></tr><tr><td>Authorization</td><td>" + auth + "</td></tr>");
  };

  errorHandler = function(jqXHR, textStatus, errorThrown) {
    $('.main .status .status-text').text(textStatus + " - " + jqXHR.status + " " + errorThrown).addClass('bg-danger').removeClass('bg-success');
    return $('.main .result .panel-body').text(jqXHR.responseText);
  };

  $('#submit-request').click(function(event) {
    var accessId, secret, url;
    event.preventDefault();
    url = $('#web-api-url').val();
    accessId = $('#access-key-id').val();
    secret = $('#web-api-secrect').val();
    date = new Date().toUTCString();
    return $.ajax({
      url: url,
      success: successHandler,
      dataType: 'json',
      crossDomain: true,
      xhrFields: {
        withCredentials: true
      },
      headers: {
        "X-HMAC-DATE": date
      },
      beforeSend: function(jqXHR, settings) {
        auth = "HMAC " + accessId + " " + (calculateSignature(jqXHR, secret, settings));
        jqXHR.setRequestHeader("Authorization", auth);
        return true;
      }
    }).fail(errorHandler);
  });

}).call(this);

//# sourceMappingURL=hmac-client.map
